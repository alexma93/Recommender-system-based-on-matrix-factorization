# set data directory
dfs.data.dir=../data
# set result directory
# recommender result will output in this folder
dfs.result.dir=../result

# convertor
# load data and splitting data 
# into two (or three) set
# setting dataset name
#  oppure twitter
data.input.path=twitter
# setting dataset format(UIR, UIRT)
data.column.format=UIRT
# setting method of split data
# value can be ratio, loocv, given, KCV
#data.model.splitter=ratio
# this value should in (0,1)
#data.splitter.trainset.ratio=0.9
#data.splitter.cv.number=5
# using rating to split dataset
#data.splitter.ratio=rating

data.model.splitter=testset
data.testset.path=twitter/UHTfIdfTestSet.csv


# filmtrust dataset is saved by text
# text, arff is accepted
data.model.format=text


# set the random seed for reproducing the results (split data, init parameters and other methods using random)
# default is set 1l
# if do not set ,just use System.currentTimeMillis() as the seed and could not reproduce the results.
rec.random.seed=1

rec.iterator.learnrate=0.001
rec.iterator.learnrate.maximum=0.001
rec.iterator.maximum=20
rec.user.regularization=0.01
rec.item.regularization=0.01
rec.learnrate.decay=1.0

# da aggiungere per l'svd++ rispetto al timesvd
#rec.impItem.regularization=0.001
rec.factor.number=7
#rec.learnrate.bolddriver=false

# binarize threshold mainly used in ranking
# -1.0 - maxRate, binarize rate into -1.0 and 1.0
# binThold = -1.0ï¼Œ do nothing
# binThold = value, rating > value is changed to 1.0 other is 0.0, mainly used in ranking
# for PGM 0.0 maybe a better choose
data.convert.binarize.threshold=-1.0

# specifies evaluators
# rec.eval.classes=auc,precision,recall...
# if rec.eval.class is blank 
# every evaluator will be calculated
# rec.eval.classes=auc,precision,recall

#can use user,item,social similarity, default value is user, maximum values:user,item,social
#rec.recommender.similarities=user